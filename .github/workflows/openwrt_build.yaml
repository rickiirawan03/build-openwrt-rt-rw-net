name: Build OpenWrt 22.03.7 x86_64

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

    - name: Download OpenWrt ImageBuilder
      run: |
        wget https://archive.openwrt.org/releases/22.03.7/targets/x86/64/openwrt-imagebuilder-22.03.7-x86-64.Linux-x86_64.tar.xz
        tar -xf openwrt-imagebuilder-22.03.7-x86-64.Linux-x86_64.tar.xz
        mv openwrt-imagebuilder-22.03.7-x86-64.Linux-x86_64 imagebuilder

    - name: Add uci-defaults configs
      working-directory: ./imagebuilder
      run: |
        mkdir -p files/etc/uci-defaults
        mkdir -p files/www/nds

        # --- WiFi config ---
        cat > files/etc/uci-defaults/99-wifi-config << "EOF"
        #!/bin/sh
        uci batch <<EOT
          set wireless.radio0.disabled='0'
          set wireless.default_radio0=wifi-iface
          set wireless.default_radio0.device='radio0'
          set wireless.default_radio0.network='lan'
          set wireless.default_radio0.mode='ap'
          set wireless.default_radio0.ssid='Latihan'
          set wireless.default_radio0.encryption='none'
        EOT
        uci commit wireless
        wifi reload
        EOF
        chmod +x files/etc/uci-defaults/99-wifi-config

        # --- Nginx config (80 + 2080) ---
        cat > files/etc/uci-defaults/99-nginx-config << "EOF"
        #!/bin/sh
        uci batch <<EOT
          set nginx.main=nginx
          set nginx.main.enabled='1'

          # Default HTTP
          set nginx.http=server
          set nginx.http.listen='80'
          set nginx.http.server_name='_'
          set nginx.http.locations='/'
          set nginx.http.locations.target='/www'

          # Extra server block for FAS on port 2080
          add nginx server
          set nginx.@server[-1].listen='2080'
          set nginx.@server[-1].server_name='_'
          add_list nginx.@server[-1].locations='/'
          set nginx.@server[-1].locations='/'.target='/www'
        EOT
        uci commit nginx
        /etc/init.d/nginx enable
        EOF
        chmod +x files/etc/uci-defaults/99-nginx-config

        # --- OpenNDS FAS config ---
        cat > files/etc/uci-defaults/99-opennds-config << "EOF"
        #!/bin/sh
        uci batch <<EOT
          set opennds.@opennds[0].enabled='1'
          set opennds.@opennds[0].GatewayInterface='br-lan'
          set opennds.@opennds[0].FASPort='2080'
          set opennds.@opennds[0].FASRemoteIP='127.0.0.1'
          set opennds.@opennds[0].FASPath='/nds/fas-aes.php'
          set opennds.@opennds[0].MaxClients='50'
        EOT
        uci commit opennds
        /etc/init.d/opennds enable
        EOF
        chmod +x files/etc/uci-defaults/99-opennds-config

        # --- Dummy FAS PHP file ---
        cat > files/www/nds/fas-aes.php << "EOF"
        <?php
        echo "OpenNDS FAS Dummy - OK";
        ?>
        EOF

    - name: Build firmware with extra packages
      working-directory: ./imagebuilder
      run: |
        make image \
          PACKAGES="kmod-ath9k wpad-openssl freeradius3 freeradius3-utils freeradius3-default \
          php8 php8-cli php8-cgi php8-fpm php8-fastcgi \
          nginx nginx-mod-luci opennds mariadb-server mariadb-client \
          luci luci-theme-argon luci-app-argon-config \
          mwan3 luci-app-mwan3" \
          FILES="files"

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-x86-64-22.03.7
        path: imagebuilder/bin/targets/x86/64/*
