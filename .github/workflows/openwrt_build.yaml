#
# Nama Workflow: Build OpenWrt x86/64 untuk RTWnet (v3 - Perbaikan Error)
#
# Arsitektur: x86/64
#
# Perubahan:
# - Memperbaiki error "target pattern contains no '%'".
# - Mengubah metode penambahan tema Argon & konfigurasinya menjadi git clone langsung
#   untuk stabilitas yang lebih baik.
#

name: Build OpenWrt x86/64 RTWnet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout Kode
        uses: actions/checkout@v4

      - name: 2. Instalasi Dependensi Build
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
          gcc-multilib gettext git gperf haveged help2man intltool \
          libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev \
          libtool lzma-dev node-less p7zip p7zip-full patch python3 \
          python3-pip qemu-utils rsync scons subversion swig texinfo \
          unzip upx-ucl wget xmlto zlib1g-dev

      - name: 3. Kloning Source Code OpenWrt
        run: |
          git clone https://github.com/openwrt/openwrt.git -b openwrt-23.05 openwrt
          cd openwrt

      - name: 4. Tambah Feed Paket Kustom (Hanya OpenClash)
        working-directory: ./openwrt
        run: |
          # Hanya OpenClash yang ditambahkan sebagai feed, sisanya akan di-clone manual
          echo 'src-git-full openclash https://github.com/vernesong/luci-app-openclash.git' >> feeds.conf.default

      - name: 5. Update & Install Feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 6. Kloning Tema Argon & Konfigurasi Secara Manual
        working-directory: ./openwrt
        run: |
          # Metode ini lebih stabil daripada menggunakan feeds
          git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config

      - name: 7. Buat File Konfigurasi (.config) untuk x86/64
        working-directory: ./openwrt
        run: |
          rm -f .config
          # --- Konfigurasi untuk Target x86/64 ---
          cat <<EOF > .config
          # Target Arsitektur
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_generic=y

          # Format Image
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_TARGET_IMAGES_PAD=y
          CONFIG_GRUB_IMAGES=y
          CONFIG_VMDK_IMAGES=y

          # Kernel Modules -> Network Devices
          CONFIG_PACKAGE_kmod-e1000e=y
          CONFIG_PACKAGE_kmod-r8169=y

          # Kernel Modules -> USB Support
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_usbutils=y

          # Kernel Modules -> Filesystems
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-ntfs3=y
          CONFIG_PACKAGE_block-mount=y

          # LuCI -> 3. Applications
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-opennds=y

          # LuCI -> 4. Themes
          CONFIG_PACKAGE_luci-theme-argon=y

          # Network -> Captive Portals
          CONFIG_PACKAGE_opennds=y

          # Network -> PPP
          CONFIG_PACKAGE_ppp=y
          CONFIG_PACKAGE_ppp-mod-pppoe=y

          # Network -> WirelessAPD
          CONFIG_PACKAGE_wpad-openssl=y
          # CONFIG_PACKAGE_wpad-basic-wolfssl is not set

          # Utilitas dasar
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          EOF
          make defconfig

      - name: 8. Unduh Paket & Toolchain
        working-directory: ./openwrt
        run: |
          make download -j$(nproc) || make download -j1 V=s

      - name: 9. Build Firmware
        working-directory: ./openwrt
        run: |
          echo "Memulai proses build x86/64, ini akan memakan waktu..."
          make -j$(nproc) V=s || make -j1 V=s

      - name: 10. Siapkan & Unggah Artifacts
        run: |
          mkdir -p ./artifact/
          cp -r ./openwrt/bin/targets/x86/64/* ./artifact/
          cd ./artifact/
          zip -r OpenWrt-x86-64-Firmware-RTWnet.zip .

      - name: 11. Unggah Firmware ke Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt-x86-64-Firmware-RTWnet
          path: ./artifact/OpenWrt-x86-64-Firmware-RTWnet.zip
