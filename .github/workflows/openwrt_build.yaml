name: Build OpenWrt x86_64 full buildroot

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  OPENWRT_VERSION: "v24.10.2"
  JOBS: "2"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache gawk gcc-multilib \
            libncurses5-dev libssl-dev subversion git unzip time rsync wget

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Clone OpenWrt source
        run: |
          git clone --depth 1 "${{ env.OPENWRT_REPO }}" openwrt-src
          cd openwrt-src
          git fetch --tags --depth=1 origin
          git checkout "${{ env.OPENWRT_VERSION }}" || true

      - name: Prepare feeds and custom packages
        run: |
          cd openwrt-src
          echo "src-git packages https://git.openwrt.org/feed/packages.git" >> feeds.conf.default
          echo "src-git luci https://git.openwrt.org/project/luci.git" >> feeds.conf.default
          echo "src-git routing https://git.openwrt.org/feed/routing.git" >> feeds.conf.default
          echo "src-git telephony https://git.openwrt.org/feed/telephony.git" >> feeds.conf.default

          ./scripts/feeds update -a
          ./scripts/feeds install -a

          mkdir -p package/community
          git clone --depth 1 https://github.com/jerrykuku/luci-theme-argon.git package/community/luci-theme-argon
          git clone --depth 1 https://github.com/jerrykuku/luci-app-argon-config.git package/community/luci-app-argon-config
          git clone --depth 1 https://github.com/vernesong/OpenClash.git package/community/openclash
          git clone --depth 1 https://github.com/openNDS/openNDS.git package/community/opennds || true

      - name: Create .config
        run: |
          cd openwrt-src
          cat > .config <<'EOF'
CONFIG_TARGET_x86=y
CONFIG_TARGET_x86_64=y
CONFIG_TARGET_x86_64_generic=y

CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_nginx=y
CONFIG_PACKAGE_nginx-mod-luci=y
CONFIG_PACKAGE_php8=y
CONFIG_PACKAGE_php8-cli=y
CONFIG_PACKAGE_php8-cgi=y
CONFIG_PACKAGE_php8-fpm=y
CONFIG_PACKAGE_php8-fastcgi=y
CONFIG_PACKAGE_freeradius3=y
CONFIG_PACKAGE_freeradius3-utils=y
CONFIG_PACKAGE_freeradius3-default=y
CONFIG_PACKAGE_opennds=y
CONFIG_PACKAGE_luci-theme-argon=y
CONFIG_PACKAGE_luci-app-argon-config=y
CONFIG_PACKAGE_mwan3=y
CONFIG_PACKAGE_luci-app-mwan3=y
CONFIG_PACKAGE_kmod-ath9k=y
CONFIG_PACKAGE_wpad-openssl=y
CONFIG_PACKAGE_openclash=y
EOF

      - name: Copy overlay files
        run: |
          cd openwrt-src
          mkdir -p files/etc/uci-defaults
          mkdir -p files/etc/nginx/conf.d
          mkdir -p files/etc/opennds
          mkdir -p files/www/nds

          cat > files/etc/uci-defaults/99-enable-wifi-and-services <<'EOF'
#!/bin/sh
uci set wireless.@wifi-device[0].disabled='0' || true
uci foreach wifi-iface 'uci set wireless.@wifi-iface[$id].disabled=0' || true
uci commit wireless

uci -q batch <<-EOC
set firewall.allow_nginx=rule
set firewall.allow_nginx.name='Allow-Nginx-2080'
set firewall.allow_nginx.src='*'
set firewall.allow_nginx.dest_port='2080'
set firewall.allow_nginx.target='ACCEPT'
set firewall.allow_nginx.proto='tcp'
commit firewall
EOC

/etc/init.d/php8-fpm enable || true
/etc/init.d/nginx enable || true
/etc/init.d/freeradius3 enable || true
/etc/init.d/opennds enable || true
exit 0
EOF
          chmod +x files/etc/uci-defaults/99-enable-wifi-and-services

          cat > files/etc/nginx/conf.d/opennds.conf <<'EOF'
server {
    listen 2080 default_server;
    listen [::]:2080 default_server;
    root /www;
    index index.php index.html;

    location /nds/ {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass unix:/run/php-fpm.sock;
    }
}
EOF

          cat > files/www/nds/fas-aes.php <<'EOF'
<?php
echo "FAS Example - replace with secure fas-aes.php from openNDS";
?>
EOF

          cat > files/etc/opennds/opennds.conf <<'EOF'
faskey = mysharedkey
fas_remote = 127.0.0.1
fas_port = 2080
fas_path = /nds/fas-aes.php
fas_secure_enabled = 2
radius_enable = yes
radius_server = 127.0.0.1
radius_port = 1812
radius_secret = radiussecret
EOF

      - name: Build firmware
        working-directory: openwrt-src
        env:
          CCACHE_DIR: ~/.ccache
          FORCE_UNSAFE_CONFIGURE: "1"
        run: |
          make defconfig
          make -j${{ env.JOBS }} V=s

      - name: Upload firmware image
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-x86_64-firmware
          path: |
            openwrt-src/bin/targets/x86/64/*combined*.img.gz
